<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>40</x><y>550</y><w>420</w><h>130</h></coordinates><panel_attributes>Parser
--
+isValid(playerInput: string, availableVerbs: List&lt;Verbs&gt;): returns verb+noun combo or null if invalid
- parse(playerInput: string) : string, string // returns verb+noun combo or null if invalid</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>490</x><y>550</y><w>210</w><h>190</h></coordinates><panel_attributes>InputManager
--
-Parser
--
+InputManager(Prompt) : InputManager
+askForPlayerInput() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>230</y><w>210</w><h>130</h></coordinates><panel_attributes>GameObject
--
-id: string
-name : string
-desc : string
--
+getID() : string
+getName() : string
+getDescription() : string
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>550</y><w>210</w><h>140</h></coordinates><panel_attributes>Prompt (Mediator)
--
-InputManager
-OutputManager
-CommandManager
--
+askForPlayerInput() : void
+print() : void
--
askForPlayerInput dispatches 
Commands when valid</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>550</y><w>210</w><h>190</h></coordinates><panel_attributes>OutputManager
--
+OutputManager(Prompt) : OutputManager
+print() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1260</x><y>380</y><w>210</w><h>140</h></coordinates><panel_attributes>GameState
--
- player: Player
- map : Map
--
+getPlayer() : string
+getMap() : string
+setPlayer() : void
+setMap() : void
--
state should be immutable, actually?</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1260</x><y>230</y><w>210</w><h>130</h></coordinates><panel_attributes>GameManager
--
- currentState : GameState
- previousState : GameState
--
+applyCommand(Command) : void
+undo() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>530</y><w>210</w><h>130</h></coordinates><panel_attributes>Player &lt;&lt;Pawn&gt;&gt;
--
-Inventory
-playerName : string
-commands : List&lt;Command&gt; //quit, help
--
+getPlayerName() : string
+getInventory() : Inventory
+getCommands(): List&lt;Command&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1260</x><y>530</y><w>210</w><h>130</h></coordinates><panel_attributes>Inventory
--
-List&lt;Pickup&gt;
-maxSize: int // 0 for none
--
+addPickup() : void
+removePickup() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>380</y><w>210</w><h>130</h></coordinates><panel_attributes>Pawn &lt;&lt;GameObject&gt;&gt;
--
-position: string // roomID
--
+getPosition() : string // roomID
+setPosition() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>600</x><y>290</y><w>390</w><h>160</h></coordinates><panel_attributes>/Command/
--
-id: string
-verb: string
-template: string
--
+execute(currentState: GameState, optionalParams: ???) : GameState
+getVerb() : string // "walk" "light" "move"
+getTemplate() : string
--
Could be more abstract
execute assumes the noun is correct?</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1260</x><y>680</y><w>210</w><h>200</h></coordinates><panel_attributes>Room &lt;&lt;GameObject&gt;&gt;
--
-Inventory
-connections : List&lt;string&gt; roomIDs
-dimension: string // or number, I'm not your boss
--
+onEnter() : void
+onExit () : void
+getCommands(): List&lt;Command&gt;
+getInventory(): Inventory
+addConnection() : void
+removeConnection() : void
--
All Rooms have listConnections command?</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>680</y><w>210</w><h>80</h></coordinates><panel_attributes>Map
--
-rooms: List&lt;Room&gt; // could also be a dictionary by ID
--
+getRooms() : List&lt;Room&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>780</y><w>210</w><h>80</h></coordinates><panel_attributes>Pickup &lt;&lt;Pawn&gt;&gt;
--
- commands : List&lt;Command&gt;
--
+getCommands() : List&lt;Command&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>260</x><y>290</y><w>320</w><h>160</h></coordinates><panel_attributes>CommandManager
--
-gameManager : GameManager
-roomCommands : List&lt;Command&gt;
-playerCommands: List&lt;Command&gt;
-npcCommands : List&lt;Command&gt;
--
-updateRoomCommands() : void
-updatePlayerCommands() : void
-updateNPCCommands() : void
+getAvailableCommands() : List&lt;Commands&gt;
+dispatch(command: Command) : void
--
dispatch calls gameManager.applyCommand</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>90</x><y>70</y><w>100</w><h>70</h></coordinates><panel_attributes>IWH v0.01</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLActor</id><coordinates><x>800</x><y>770</y><w>60</w><h>110</h></coordinates><panel_attributes>Actor</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>810</x><y>680</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;20;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1500</x><y>880</y><w>210</w><h>80</h></coordinates><panel_attributes>NPC &lt;&lt;Pawn&gt;&gt;
--
-Inventory
-playerName : string
-commands : List&lt;Command&gt;</panel_attributes><additional_attributes></additional_attributes></element></diagram>